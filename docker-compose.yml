version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    environment:
      - POSTGRES_USER=authuser
      - POSTGRES_PASSWORD=authpassword
      - POSTGRES_DB=authdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser -d authdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth-network

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-microservice
    ports:
      - "8080:8080"
    environment:
      # Server Configuration
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - SERVER_READ_TIMEOUT=10s
      - SERVER_WRITE_TIMEOUT=10s
      - SERVER_SHUTDOWN_TIMEOUT=5s
      - ENVIRONMENT=production
      
      # JWT Configuration - CHANGE THESE IN PRODUCTION!
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET:-change-this-to-a-secure-secret-at-least-32-characters}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-change-this-to-another-secure-secret-at-least-32-chars}
      - JWT_ACCESS_EXPIRY=15m
      - JWT_REFRESH_EXPIRY=168h
      - JWT_ISSUER=auth-service
      - JWT_ALGORITHM=HS256
      
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=authuser
      - DB_PASSWORD=authpassword
      - DB_NAME=authdb
      - DB_SSL_MODE=disable
      
      # Logger Configuration
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - auth-network

networks:
  auth-network:
    driver: bridge

volumes:
  postgres_data:

